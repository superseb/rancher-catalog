version: '2'

{{- $k8sImage:="rancher/netes:v1.7.6-netes2-1" }}
{{- $kubectlImage:="rancher/kubectld:v0.9.0" }}

services:
  kubectl-shell:
    labels:
      io.rancher.container.create_agent: "true"
      io.rancher.container.agent.role: environmentAdmin
      io.rancher.k8s.kubectld: "true"
      {{- if (eq .Cluster.Embedded "false") }}
      io.rancher.kubernetes.service_account: rancher
      {{- end }}
    command:
    - kubectl-shell-entry.sh
    image: {{$kubectlImage}}
    privileged: true
    depends_on:
    - controller-manager
    - scheduler

{{- if (eq .Cluster.Embedded "true") }}
  controller-manager:
    command:
    - kube-controller-manager
    - --kubeconfig=/etc/kubernetes/ssl/kubeconfig
    - --cloud-provider=rancher
    - --address=0.0.0.0
    - --root-ca-file=/etc/kubernetes/ssl/ca.pem
    - --service-account-private-key-file=/etc/kubernetes/ssl/key.pem
    image: {{$k8sImage}}
    network_mode: bridge
    labels:
      io.rancher.container.dns: "false"
      io.rancher.container.create_agent: "true"
      io.rancher.container.agent.role: environment
      io.rancher.container.orchestration: 'cattle'
    #health_check:
    #  request_line: GET /healthz HTTP/1.0
    #  port: 10252
    depends_on:
      core-services/metadata:
        condition: healthylocal

  scheduler:
    command:
    - kube-scheduler
    - --kubeconfig=/etc/kubernetes/ssl/kubeconfig
    - --address=0.0.0.0
    image: {{$k8sImage}}
    network_mode: bridge
    labels:
      io.rancher.container.dns: "false"
      io.rancher.container.create_agent: "true"
      io.rancher.container.agent.role: environment
      io.rancher.container.orchestration: 'cattle'
    #health_check:
    #  request_line: GET /healthz HTTP/1.0
    #  port: 10251
    depends_on:
      core-services/metadata:
        condition: healthylocal

  kubelet:
    labels:
      io.rancher.container.dns: "false"
      io.rancher.container.create_agent: "true"
      io.rancher.container.agent.role: environment
      io.rancher.scheduler.global: "true"
      io.rancher.container.orchestration: 'cattle'
    command:
    - kubelet
    - --kubeconfig=/etc/kubernetes/ssl/kubeconfig
    - --require-kubeconfig
    - --allow-privileged=true
    - --register-node=true
    - --cloud-provider=auto-detect
    - --healthz-bind-address=0.0.0.0
    - --cluster-dns=10.43.0.10
    - --cluster-domain=cluster.local
    - --network-plugin=cni
    - --cni-conf-dir=/etc/cni/managed.d
    - --pod-infra-container-image=rancher/pause-amd64:3.0
    - --feature-gates=PersistentLocalVolumes=true
    image: {{$k8sImage}}
    volumes:
    - /run:/run
    - /var/run:/var/run
    - /sys:/sys:ro
    - /var/lib/docker:/var/lib/docker
    - /var/lib/kubelet:/var/lib/kubelet:shared
    - /var/log/containers:/var/log/containers
    - /var/log/pods:/var/log/pods
    - rancher-cni-driver:/etc/cni:ro
    - rancher-cni-driver:/opt/cni:ro
    - /dev:/host/dev
    network_mode: host
    pid: host
    ipc: host
    privileged: true
    depends_on:
      core-services/metadata:
        condition: healthylocal

  proxy:
    command:
    - kube-proxy
    - --kubeconfig=/etc/kubernetes/ssl/kubeconfig
    - --v=2
    - --healthz-bind-address=0.0.0.0
    image: {{$k8sImage}}
    labels:
      io.rancher.container.dns: "false"
      io.rancher.scheduler.global: "true"
      io.rancher.container.orchestration: 'cattle'
    privileged: true
    network_mode: host
    depends_on:
      core-services/metadata:
        condition: healthylocal
{{- end }}
